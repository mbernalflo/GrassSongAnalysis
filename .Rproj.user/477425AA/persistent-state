build-last-errors="[]"
build-last-errors-base-dir="~/A_Projects/Gomphocerus/SongAnalysis/GrassSongAnalysis/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating GrassSongAnalysis documentation\\r\\nLoading GrassSongAnalysis\\r\\n\",\"type\":2},{\"output\":\"Writing GrassSongAnalysis.Rd\\r\\nWriting curateStrophes.Rd\\r\\nWriting curateSyllables.Rd\\r\\nWriting identifyExtremes.Rd\\r\\nWriting identifyPulses.Rd\\r\\nWriting identifyStrophes.Rd\\r\\nWriting identifySyllables.Rd\\r\\nWriting loadSongfile.Rd\\r\\nWriting measureAnything.Rd\\r\\nWriting measureSyllables.Rd\\r\\nWriting peakIdent.Rd\\r\\nWriting plotSpectro.Rd\\r\\nWriting NAMESPACE\\r\\n\",\"type\":1},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> Rcmd.exe INSTALL --no-multiarch --with-keep.source GrassSongAnalysis\\n\\n\",\"type\":0},{\"output\":\"* installing to library 'C:/Users/Holger/Documents/R/R-3.2.1/library'\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* installing *source* package 'GrassSongAnalysis' ...\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** R\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** inst\\r\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** installing vignettes\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (GrassSongAnalysis)\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="0"
saveActionState="0"
